import random
from typing import List, Optional
from bot import Bot
from card import Card, CardType
from game_handling.game_state import GameState

class Roboxer(Bot):
    def __init__(self, name: str):
        super().__init__(name)
        self.future_cards: List[Card] = []

    def play(self, state: GameState) -> Optional[Card]:
        saw_the_future = False
        def get_cards(card_type: CardType):
            return [card for card in self.hand if card.card_type == card_type]
        see_the_future_cards = get_cards(CardType.SEE_THE_FUTURE)
        skip_cards = get_cards(CardType.SKIP)
        normal_cards = get_cards(CardType.NORMAL)
        if self.hand:
            if CardType.EXPLODING_KITTEN in (card.card_type for card in self.hand):
                if skip_cards:
                    return skip_cards[0]
                elif self.has_defuse():
                    self.use_defuse()
                    self.handle_exploding_kitten(state)
                else:
                    return None

            if state.cards_left_to_draw <= 5 and skip_cards:
                return skip_cards[0]

            if see_the_future_cards:
                if not saw_the_future:
                    self.see_the_future(state, [])
                    print(

"""
 █████     █████████  ██████████ ██████████                              
░░███     ███░░░░░███░░███░░░░░█░░███░░░░░█                              
 ░███    ░███    ░░░  ░███  █ ░  ░███  █ ░                               
 ░███    ░░█████████  ░██████    ░██████                                 
 ░███     ░░░░░░░░███ ░███░░█    ░███░░█                                 
 ░███     ███    ░███ ░███ ░   █ ░███ ░   █                              
 █████   ░░█████████  ██████████ ██████████                              
░░░░░     ░░░░░░░░░  ░░░░░░░░░░ ░░░░░░░░░░                               
                                                                         
                                                                         
                                                                         
 ██████████ █████   █████ ██████████ ███████████   █████ █████           
░░███░░░░░█░░███   ░░███ ░░███░░░░░█░░███░░░░░███ ░░███ ░░███            
 ░███  █ ░  ░███    ░███  ░███  █ ░  ░███    ░███  ░░███ ███             
 ░██████    ░███    ░███  ░██████    ░██████████    ░░█████    ██████████
 ░███░░█    ░░███   ███   ░███░░█    ░███░░░░░███    ░░███    ░░░░░░░░░░ 
 ░███ ░   █  ░░░█████░    ░███ ░   █ ░███    ░███     ░███               
 ██████████    ░░███      ██████████ █████   █████    █████              
░░░░░░░░░░      ░░░      ░░░░░░░░░░ ░░░░░   ░░░░░    ░░░░░               
                                                                         
                                                                         
                                                                         
 ███████████ █████   █████ █████ ██████   █████   █████████              
░█░░░███░░░█░░███   ░░███ ░░███ ░░██████ ░░███   ███░░░░░███             
░   ░███  ░  ░███    ░███  ░███  ░███░███ ░███  ███     ░░░              
    ░███     ░███████████  ░███  ░███░░███░███ ░███                      
    ░███     ░███░░░░░███  ░███  ░███ ░░██████ ░███    █████             
    ░███     ░███    ░███  ░███  ░███  ░░█████ ░░███  ░░███              
    █████    █████   █████ █████ █████  ░░█████ ░░█████████              
   ░░░░░    ░░░░░   ░░░░░ ░░░░░ ░░░░░    ░░░░░   ░░░░░░░░░               
                                                                         
                                                                         
                                                                         
 ██████   █████    ███████    █████   ███   █████                        
░░██████ ░░███   ███░░░░░███ ░░███   ░███  ░░███                         
 ░███░███ ░███  ███     ░░███ ░███   ░███   ░███                         
 ░███░░███░███ ░███      ░███ ░███   ░███   ░███                         
 ░███ ░░██████ ░███      ░███ ░░███  █████  ███                          
 ░███  ░░█████ ░░███     ███   ░░░█████░█████░                           
 █████  ░░█████ ░░░███████░      ░░███ ░░███                             
░░░░░    ░░░░░    ░░░░░░░         ░░░   ░░░                              
"""

)
                    saw_the_future = True
                    return see_the_future_cards[0]

            if self.future_cards and self.future_cards[0].card_type == CardType.EXPLODING_KITTEN:
                return skip_cards[0] if skip_cards else None

            if normal_cards:
                print("""
██████╗ ██████╗ ███████╗███████╗███████╗     █████╗ ██╗  ████████╗   
██╔══██╗██╔══██╗██╔════╝██╔════╝██╔════╝    ██╔══██╗██║  ╚══██╔══╝   
██████╔╝██████╔╝█████╗  ███████╗███████╗    ███████║██║     ██║      
██╔═══╝ ██╔══██╗██╔══╝  ╚════██║╚════██║    ██╔══██║██║     ██║      
██║     ██║  ██║███████╗███████║███████║    ██║  ██║███████╗██║      
╚═╝     ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝    ╚═╝  ╚═╝╚══════╝╚═╝      
                                                                     
███████╗██╗  ██╗                                                     
██╔════╝██║  ██║                                                     
█████╗  ███████║                                                     
██╔══╝  ╚════██║                                                     
██║          ██║                                                     
╚═╝          ╚═╝                                                     
""" )
                return normal_cards[0]
        return None

    def handle_exploding_kitten(self, state: GameState) -> int:
        print("""
███╗   ██╗███████╗██╗   ██╗███████╗██████╗                  
████╗  ██║██╔════╝██║   ██║██╔════╝██╔══██╗                 
██╔██╗ ██║█████╗  ██║   ██║█████╗  ██████╔╝                 
██║╚██╗██║██╔══╝  ╚██╗ ██╔╝██╔══╝  ██╔══██╗                 
██║ ╚████║███████╗ ╚████╔╝ ███████╗██║  ██║                 
╚═╝  ╚═══╝╚══════╝  ╚═══╝  ╚══════╝╚═╝  ╚═╝                 
                                                            
 ██████╗  ██████╗ ███╗   ██╗███╗   ██╗ █████╗               
██╔════╝ ██╔═══██╗████╗  ██║████╗  ██║██╔══██╗              
██║  ███╗██║   ██║██╔██╗ ██║██╔██╗ ██║███████║              
██║   ██║██║   ██║██║╚██╗██║██║╚██╗██║██╔══██║              
╚██████╔╝╚██████╔╝██║ ╚████║██║ ╚████║██║  ██║              
 ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═══╝╚═╝  ╚═╝              
                                                            
 ██████╗ ██╗██╗   ██╗███████╗    ██╗   ██╗ ██████╗ ██╗   ██╗
██╔════╝ ██║██║   ██║██╔════╝    ╚██╗ ██╔╝██╔═══██╗██║   ██║
██║  ███╗██║██║   ██║█████╗       ╚████╔╝ ██║   ██║██║   ██║
██║   ██║██║╚██╗ ██╔╝██╔══╝        ╚██╔╝  ██║   ██║██║   ██║
╚██████╔╝██║ ╚████╔╝ ███████╗       ██║   ╚██████╔╝╚██████╔╝
 ╚═════╝ ╚═╝  ╚═══╝  ╚══════╝       ╚═╝    ╚═════╝  ╚═════╝ 
                                                            
██╗   ██╗██████╗                                            
██║   ██║██╔══██╗                                           
██║   ██║██████╔╝                                           
██║   ██║██╔═══╝                                            
╚██████╔╝██║                                                
 ╚═════╝ ╚═╝                                                
""")
        return 0

    def see_the_future(self, state: GameState, top_three: List[Card]):
        self.future_cards = top_three